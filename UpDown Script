

-- LocalScript

local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- Поменяйте при необходимости: если скрипт не внутри фрейма, укажите путь

local frame = script.Parent
assert(frame and frame:IsA("GuiObject"), "Script must be child of a GuiObject (Frame/etc)")

-- Опции

local dragHandle = frame           -- элемент по которому тащим; можно сделать frame:WaitForChild("Title") и т.д.
local stayInsideParent = true      -- если true, ограничиваем чтобы фрейм не выходил за родителя
local smoothing = false            -- если true, позиция будет плавно интерполироваться к цели (необязательно)

-- Внутние переменные

local dragging = false
local dragStartPos = Vector2.new()
local guiStartAbsPos = Vector2.new()
local lastInput = nil
local targetAbsPos = nil

-- Вспомогательные функции

local function toAbsPositionFromUDim2(ud)
    -- переводит UDim2 в абсолютную позицию верхнего левого угла с учётом AnchorPoint
    local parent = frame.Parent
    local parentSize = parent and parent.AbsoluteSize or Vector2.new()
    -- если в позиции есть Scale, учитываем его
    local x = ud.X.Scale * parentSize.X + ud.X.Offset
    local y = ud.Y.Scale * parentSize.Y + ud.Y.Offset
    -- AbsolutePosition учитывает AnchorPoint, но здесь позиция в UDim2 задаёт координату верхнего левого с учётом AnchorPoint,
    -- поэтому надо вычесть AnchorPoint * frame.AbsoluteSize чтобы получить верхний-левый угол.
    local anchorOffset = Vector2.new(frame.AnchorPoint.X * frame.AbsoluteSize.X, frame.AnchorPoint.Y * frame.AbsoluteSize.Y)
    return Vector2.new(x, y) - anchorOffset
end

local function toUDim2FromAbsPosition(absPos)
    -- переводит абсолютную верхнюю-левую позицию в UDim2 (сохранит Scale = 0, можно изменить при необходимости)
    local parent = frame.Parent
    local parentSize = parent and parent.AbsoluteSize or Vector2.new()
    local xOffset = absPos.X
    local yOffset = absPos.Y
    -- учитываем AnchorPoint: UDim2 позиция задаёт точку AnchorPoint, значит нужно прибавить AnchorPoint*frameSize
    local anchorAdd = Vector2.new(frame.AnchorPoint.X * frame.AbsoluteSize.X, frame.AnchorPoint.Y * frame.AbsoluteSize.Y)
    local udX = (0) -- Scale = 0
    local udY = (0)
    return UDim2.new(udX, xOffset + anchorAdd.X, udY, yOffset + anchorAdd.Y)
end

local function clampToParent(absPos)
    if not stayInsideParent then return absPos end
    local parent = frame.Parent
    if not parent then return absPos end
    local pSize = parent.AbsoluteSize
    local fSize = frame.AbsoluteSize
    local minX, minY = 0, 0
    local maxX, maxY = math.max(0, pSize.X - fSize.X), math.max(0, pSize.Y - fSize.Y)
    local clampedX = math.clamp(absPos.X, minX, maxX)
    local clampedY = math.clamp(absPos.Y, minY, maxY)
    return Vector2.new(clampedX, clampedY)
end

-- Обработка ввода

dragHandle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        lastInput = input
        dragStartPos = input.Position
        -- используем AbsolutePosition верхнего-левого угла как стартовую точку
        guiStartAbsPos = frame.AbsolutePosition
        targetAbsPos = guiStartAbsPos
        -- отслеживаем конец на данном input (если input исчезнет)
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

dragHandle.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        lastInput = input
    end
end)

-- Реагируем на изменение размеров родителя/фрейма чтобы поддерживать корректные AbsoluteSize/Position

local function updateFramePositionFromTarget()
    if not targetAbsPos then return end
    -- clamp заново с текущими размерами
    local clamped = clampToParent(targetAbsPos)
    local newUD = toUDim2FromAbsPosition(clamped)
    frame.Position = newUD
end

-- Рендер/обновление каждый фрейм

RunService.RenderStepped:Connect(function()
    if not dragging or not lastInput then return end
    local delta = lastInput.Position - dragStartPos
    targetAbsPos = guiStartAbsPos + delta
    targetAbsPos = clampToParent(targetAbsPos)
    if smoothing then
        -- плавная интерполяция (необязательно)
        local currentAbs = frame.AbsolutePosition
        local lerped = currentAbs:Lerp(targetAbsPos, 0.25) -- скорость можно менять
        frame.Position = toUDim2FromAbsPosition(lerped)
    else
        frame.Position = toUDim2FromAbsPosition(targetAbsPos)
    end
end)

-- При ресайзе родителя корректируем позицию, чтобы остаться в пределах (если нужно)

frame.Parent:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
    updateFramePositionFromTarget()
end)
frame:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
    updateFramePositionFromTarget()
end)
